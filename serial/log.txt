3/2/11

HCO_chain_arduino.py
	neeeds half_Center4.pde loaded into the Arduino
	made images:
		half_center_chain_250ms.png
		half_center_chain_150ms.png
		half_center_chain_100ms.png
	parameters:
		tau = .8*ms
		tr = 3*mV
		threshold = tr-.5*mV;
		v0 = 0*mV
		v1 = 2.8*mV
		timespan = 250*ms
		eqs = '''
		dv/dt = (tr-v)/(0.2*k)/tau : volt
		dk/dt = -10*k/(1*second) : volt/volt
		'''

modify HCO_chain_arduino.py to look like HCO_chain.py
HCO class added to arduino.py
HCO_chain_arduino2.py measures time it takes to go one step in the simulation
floats are now sent as binary data instead of strings.  cut time in half


3/9/11

HCO_chain_arduino2.py
	STATUS:  not working - arduino voltages not spiking as they should.  Compare to HCO_chain_arduino.py using half_center4.pde
	modified HCO_chain_arduino2.py to only send and recieve spikes, not access values directly
	changed baud rate to 28800 which is the highest the Arduino seems to allow. (look into this)
	records spikes from arduino and predicted spikes from the "proxy" neurons to compare the error between machines

arduino.py modified
	changing timeout to None causes problems
	still using a loop to wait for bytes
	read/write functions moved to Arduino class from HCO class


3/11/11

arduino.py modified for backwards compatibility
	get_value_v4() and tick_v4() will work with half_center4.pde

HCO_chain_arduino2.py modified for backwards compatibility
	it has been tested and works using half_center4.pde and using half_center5.pde 
	half_center4.pde produces a half centre oscillator graph, but half_center5.pde does not

half_center5.pde fixed

